ARM GAS  C:\Users\thinhnnh\AppData\Local\Temp\cczqndbJ.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32g0xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	NMI_Handler:
  25              	.LFB310:
  26              		.file 1 "Src/stm32g0xx_it.c"
   1:Src/stm32g0xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32g0xx_it.c **** /**
   3:Src/stm32g0xx_it.c ****   ******************************************************************************
   4:Src/stm32g0xx_it.c ****   * @file    stm32g0xx_it.c
   5:Src/stm32g0xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32g0xx_it.c ****   ******************************************************************************
   7:Src/stm32g0xx_it.c ****   * @attention
   8:Src/stm32g0xx_it.c ****   *
   9:Src/stm32g0xx_it.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Src/stm32g0xx_it.c ****   * All rights reserved.
  11:Src/stm32g0xx_it.c ****   *
  12:Src/stm32g0xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Src/stm32g0xx_it.c ****   * in the root directory of this software component.
  14:Src/stm32g0xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Src/stm32g0xx_it.c ****   *
  16:Src/stm32g0xx_it.c ****   ******************************************************************************
  17:Src/stm32g0xx_it.c ****   */
  18:Src/stm32g0xx_it.c **** /* USER CODE END Header */
  19:Src/stm32g0xx_it.c **** 
  20:Src/stm32g0xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Src/stm32g0xx_it.c **** #include "main.h"
  22:Src/stm32g0xx_it.c **** #include "stm32g0xx_it.h"
  23:Src/stm32g0xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Src/stm32g0xx_it.c **** /* USER CODE BEGIN Includes */
  25:Src/stm32g0xx_it.c **** /* USER CODE END Includes */
  26:Src/stm32g0xx_it.c **** 
  27:Src/stm32g0xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Src/stm32g0xx_it.c **** /* USER CODE BEGIN TD */
  29:Src/stm32g0xx_it.c **** 
  30:Src/stm32g0xx_it.c **** /* USER CODE END TD */
  31:Src/stm32g0xx_it.c **** 
  32:Src/stm32g0xx_it.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  C:\Users\thinhnnh\AppData\Local\Temp\cczqndbJ.s 			page 2


  33:Src/stm32g0xx_it.c **** /* USER CODE BEGIN PD */
  34:Src/stm32g0xx_it.c **** 
  35:Src/stm32g0xx_it.c **** /* USER CODE END PD */
  36:Src/stm32g0xx_it.c **** 
  37:Src/stm32g0xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Src/stm32g0xx_it.c **** /* USER CODE BEGIN PM */
  39:Src/stm32g0xx_it.c **** 
  40:Src/stm32g0xx_it.c **** /* USER CODE END PM */
  41:Src/stm32g0xx_it.c **** 
  42:Src/stm32g0xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Src/stm32g0xx_it.c **** /* USER CODE BEGIN PV */
  44:Src/stm32g0xx_it.c **** 
  45:Src/stm32g0xx_it.c **** /* USER CODE END PV */
  46:Src/stm32g0xx_it.c **** 
  47:Src/stm32g0xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Src/stm32g0xx_it.c **** /* USER CODE BEGIN PFP */
  49:Src/stm32g0xx_it.c **** 
  50:Src/stm32g0xx_it.c **** /* USER CODE END PFP */
  51:Src/stm32g0xx_it.c **** 
  52:Src/stm32g0xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Src/stm32g0xx_it.c **** /* USER CODE BEGIN 0 */
  54:Src/stm32g0xx_it.c **** 
  55:Src/stm32g0xx_it.c **** /* USER CODE END 0 */
  56:Src/stm32g0xx_it.c **** 
  57:Src/stm32g0xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Src/stm32g0xx_it.c **** extern TIM_HandleTypeDef htim3;
  59:Src/stm32g0xx_it.c **** extern UART_HandleTypeDef huart1;
  60:Src/stm32g0xx_it.c **** extern UART_HandleTypeDef huart2;
  61:Src/stm32g0xx_it.c **** /* USER CODE BEGIN EV */
  62:Src/stm32g0xx_it.c **** 
  63:Src/stm32g0xx_it.c **** /* USER CODE END EV */
  64:Src/stm32g0xx_it.c **** 
  65:Src/stm32g0xx_it.c **** /******************************************************************************/
  66:Src/stm32g0xx_it.c **** /*           Cortex-M0+ Processor Interruption and Exception Handlers          */
  67:Src/stm32g0xx_it.c **** /******************************************************************************/
  68:Src/stm32g0xx_it.c **** /**
  69:Src/stm32g0xx_it.c ****   * @brief This function handles Non maskable interrupt.
  70:Src/stm32g0xx_it.c ****   */
  71:Src/stm32g0xx_it.c **** void NMI_Handler(void)
  72:Src/stm32g0xx_it.c **** {
  27              		.loc 1 72 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.L2:
  73:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  74:Src/stm32g0xx_it.c **** 
  75:Src/stm32g0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  76:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  77:Src/stm32g0xx_it.c ****   while (1)
  34              		.loc 1 77 3 discriminator 1 view .LVU1
  78:Src/stm32g0xx_it.c ****   {
  79:Src/stm32g0xx_it.c ****   }
  35              		.loc 1 79 3 discriminator 1 view .LVU2
  77:Src/stm32g0xx_it.c ****   {
ARM GAS  C:\Users\thinhnnh\AppData\Local\Temp\cczqndbJ.s 			page 3


  36              		.loc 1 77 9 discriminator 1 view .LVU3
  37 0000 FEE7     		b	.L2
  38              		.cfi_endproc
  39              	.LFE310:
  41              		.section	.text.HardFault_Handler,"ax",%progbits
  42              		.align	1
  43              		.global	HardFault_Handler
  44              		.syntax unified
  45              		.code	16
  46              		.thumb_func
  48              	HardFault_Handler:
  49              	.LFB311:
  80:Src/stm32g0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  81:Src/stm32g0xx_it.c **** }
  82:Src/stm32g0xx_it.c **** 
  83:Src/stm32g0xx_it.c **** /**
  84:Src/stm32g0xx_it.c ****   * @brief This function handles Hard fault interrupt.
  85:Src/stm32g0xx_it.c ****   */
  86:Src/stm32g0xx_it.c **** void HardFault_Handler(void)
  87:Src/stm32g0xx_it.c **** {
  50              		.loc 1 87 1 view -0
  51              		.cfi_startproc
  52              		@ Volatile: function does not return.
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              		@ link register save eliminated.
  56              	.L4:
  88:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  89:Src/stm32g0xx_it.c **** 
  90:Src/stm32g0xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  91:Src/stm32g0xx_it.c ****   while (1)
  57              		.loc 1 91 3 discriminator 1 view .LVU5
  92:Src/stm32g0xx_it.c ****   {
  93:Src/stm32g0xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  94:Src/stm32g0xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  95:Src/stm32g0xx_it.c ****   }
  58              		.loc 1 95 3 discriminator 1 view .LVU6
  91:Src/stm32g0xx_it.c ****   {
  59              		.loc 1 91 9 discriminator 1 view .LVU7
  60 0000 FEE7     		b	.L4
  61              		.cfi_endproc
  62              	.LFE311:
  64              		.section	.text.SVC_Handler,"ax",%progbits
  65              		.align	1
  66              		.global	SVC_Handler
  67              		.syntax unified
  68              		.code	16
  69              		.thumb_func
  71              	SVC_Handler:
  72              	.LFB312:
  96:Src/stm32g0xx_it.c **** }
  97:Src/stm32g0xx_it.c **** 
  98:Src/stm32g0xx_it.c **** /**
  99:Src/stm32g0xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 100:Src/stm32g0xx_it.c ****   */
 101:Src/stm32g0xx_it.c **** void SVC_Handler(void)
 102:Src/stm32g0xx_it.c **** {
ARM GAS  C:\Users\thinhnnh\AppData\Local\Temp\cczqndbJ.s 			page 4


  73              		.loc 1 102 1 view -0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		@ link register save eliminated.
 103:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 0 */
 104:Src/stm32g0xx_it.c **** 
 105:Src/stm32g0xx_it.c ****   /* USER CODE END SVC_IRQn 0 */
 106:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 1 */
 107:Src/stm32g0xx_it.c **** 
 108:Src/stm32g0xx_it.c ****   /* USER CODE END SVC_IRQn 1 */
 109:Src/stm32g0xx_it.c **** }
  78              		.loc 1 109 1 view .LVU9
  79              		@ sp needed
  80 0000 7047     		bx	lr
  81              		.cfi_endproc
  82              	.LFE312:
  84              		.section	.text.PendSV_Handler,"ax",%progbits
  85              		.align	1
  86              		.global	PendSV_Handler
  87              		.syntax unified
  88              		.code	16
  89              		.thumb_func
  91              	PendSV_Handler:
  92              	.LFB313:
 110:Src/stm32g0xx_it.c **** 
 111:Src/stm32g0xx_it.c **** /**
 112:Src/stm32g0xx_it.c ****   * @brief This function handles Pendable request for system service.
 113:Src/stm32g0xx_it.c ****   */
 114:Src/stm32g0xx_it.c **** void PendSV_Handler(void)
 115:Src/stm32g0xx_it.c **** {
  93              		.loc 1 115 1 view -0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97              		@ link register save eliminated.
 116:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 117:Src/stm32g0xx_it.c **** 
 118:Src/stm32g0xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 119:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 120:Src/stm32g0xx_it.c **** 
 121:Src/stm32g0xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 122:Src/stm32g0xx_it.c **** }
  98              		.loc 1 122 1 view .LVU11
  99              		@ sp needed
 100 0000 7047     		bx	lr
 101              		.cfi_endproc
 102              	.LFE313:
 104              		.section	.text.SysTick_Handler,"ax",%progbits
 105              		.align	1
 106              		.global	SysTick_Handler
 107              		.syntax unified
 108              		.code	16
 109              		.thumb_func
 111              	SysTick_Handler:
 112              	.LFB314:
 123:Src/stm32g0xx_it.c **** 
ARM GAS  C:\Users\thinhnnh\AppData\Local\Temp\cczqndbJ.s 			page 5


 124:Src/stm32g0xx_it.c **** /**
 125:Src/stm32g0xx_it.c ****   * @brief This function handles System tick timer.
 126:Src/stm32g0xx_it.c ****   */
 127:Src/stm32g0xx_it.c **** void SysTick_Handler(void)
 128:Src/stm32g0xx_it.c **** {
 113              		.loc 1 128 1 view -0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117 0000 10B5     		push	{r4, lr}
 118              	.LCFI0:
 119              		.cfi_def_cfa_offset 8
 120              		.cfi_offset 4, -8
 121              		.cfi_offset 14, -4
 129:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 130:Src/stm32g0xx_it.c **** 
 131:Src/stm32g0xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 132:Src/stm32g0xx_it.c ****   HAL_IncTick();
 122              		.loc 1 132 3 view .LVU13
 123 0002 FFF7FEFF 		bl	HAL_IncTick
 124              	.LVL0:
 133:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 134:Src/stm32g0xx_it.c **** 
 135:Src/stm32g0xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 136:Src/stm32g0xx_it.c **** }
 125              		.loc 1 136 1 is_stmt 0 view .LVU14
 126              		@ sp needed
 127 0006 10BD     		pop	{r4, pc}
 128              		.cfi_endproc
 129              	.LFE314:
 131              		.section	.text.FLASH_IRQHandler,"ax",%progbits
 132              		.align	1
 133              		.global	FLASH_IRQHandler
 134              		.syntax unified
 135              		.code	16
 136              		.thumb_func
 138              	FLASH_IRQHandler:
 139              	.LFB315:
 137:Src/stm32g0xx_it.c **** 
 138:Src/stm32g0xx_it.c **** /******************************************************************************/
 139:Src/stm32g0xx_it.c **** /* STM32G0xx Peripheral Interrupt Handlers                                    */
 140:Src/stm32g0xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 141:Src/stm32g0xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 142:Src/stm32g0xx_it.c **** /* please refer to the startup file (startup_stm32g0xx.s).                    */
 143:Src/stm32g0xx_it.c **** /******************************************************************************/
 144:Src/stm32g0xx_it.c **** 
 145:Src/stm32g0xx_it.c **** /**
 146:Src/stm32g0xx_it.c ****   * @brief This function handles Flash global interrupt.
 147:Src/stm32g0xx_it.c ****   */
 148:Src/stm32g0xx_it.c **** void FLASH_IRQHandler(void)
 149:Src/stm32g0xx_it.c **** {
 140              		.loc 1 149 1 is_stmt 1 view -0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144 0000 10B5     		push	{r4, lr}
 145              	.LCFI1:
ARM GAS  C:\Users\thinhnnh\AppData\Local\Temp\cczqndbJ.s 			page 6


 146              		.cfi_def_cfa_offset 8
 147              		.cfi_offset 4, -8
 148              		.cfi_offset 14, -4
 150:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN FLASH_IRQn 0 */
 151:Src/stm32g0xx_it.c **** 
 152:Src/stm32g0xx_it.c ****   /* USER CODE END FLASH_IRQn 0 */
 153:Src/stm32g0xx_it.c ****   HAL_FLASH_IRQHandler();
 149              		.loc 1 153 3 view .LVU16
 150 0002 FFF7FEFF 		bl	HAL_FLASH_IRQHandler
 151              	.LVL1:
 154:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN FLASH_IRQn 1 */
 155:Src/stm32g0xx_it.c **** 
 156:Src/stm32g0xx_it.c ****   /* USER CODE END FLASH_IRQn 1 */
 157:Src/stm32g0xx_it.c **** }
 152              		.loc 1 157 1 is_stmt 0 view .LVU17
 153              		@ sp needed
 154 0006 10BD     		pop	{r4, pc}
 155              		.cfi_endproc
 156              	.LFE315:
 158              		.section	.text.RCC_IRQHandler,"ax",%progbits
 159              		.align	1
 160              		.global	RCC_IRQHandler
 161              		.syntax unified
 162              		.code	16
 163              		.thumb_func
 165              	RCC_IRQHandler:
 166              	.LFB316:
 158:Src/stm32g0xx_it.c **** 
 159:Src/stm32g0xx_it.c **** /**
 160:Src/stm32g0xx_it.c ****   * @brief This function handles RCC global interrupt.
 161:Src/stm32g0xx_it.c ****   */
 162:Src/stm32g0xx_it.c **** void RCC_IRQHandler(void)
 163:Src/stm32g0xx_it.c **** {
 167              		.loc 1 163 1 is_stmt 1 view -0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171              		@ link register save eliminated.
 164:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN RCC_IRQn 0 */
 165:Src/stm32g0xx_it.c **** 
 166:Src/stm32g0xx_it.c ****   /* USER CODE END RCC_IRQn 0 */
 167:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN RCC_IRQn 1 */
 168:Src/stm32g0xx_it.c **** 
 169:Src/stm32g0xx_it.c ****   /* USER CODE END RCC_IRQn 1 */
 170:Src/stm32g0xx_it.c **** }
 172              		.loc 1 170 1 view .LVU19
 173              		@ sp needed
 174 0000 7047     		bx	lr
 175              		.cfi_endproc
 176              	.LFE316:
 178              		.section	.text.TIM3_IRQHandler,"ax",%progbits
 179              		.align	1
 180              		.global	TIM3_IRQHandler
 181              		.syntax unified
 182              		.code	16
 183              		.thumb_func
 185              	TIM3_IRQHandler:
ARM GAS  C:\Users\thinhnnh\AppData\Local\Temp\cczqndbJ.s 			page 7


 186              	.LFB317:
 171:Src/stm32g0xx_it.c **** 
 172:Src/stm32g0xx_it.c **** /**
 173:Src/stm32g0xx_it.c ****   * @brief This function handles TIM3 global interrupt.
 174:Src/stm32g0xx_it.c ****   */
 175:Src/stm32g0xx_it.c **** void TIM3_IRQHandler(void)
 176:Src/stm32g0xx_it.c **** {
 187              		.loc 1 176 1 view -0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 0
 190              		@ frame_needed = 0, uses_anonymous_args = 0
 191 0000 10B5     		push	{r4, lr}
 192              	.LCFI2:
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 4, -8
 195              		.cfi_offset 14, -4
 177:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN TIM3_IRQn 0 */
 178:Src/stm32g0xx_it.c **** 
 179:Src/stm32g0xx_it.c ****   /* USER CODE END TIM3_IRQn 0 */
 180:Src/stm32g0xx_it.c ****   HAL_TIM_IRQHandler(&htim3);
 196              		.loc 1 180 3 view .LVU21
 197 0002 0248     		ldr	r0, .L11
 198 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 199              	.LVL2:
 181:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN TIM3_IRQn 1 */
 182:Src/stm32g0xx_it.c **** 
 183:Src/stm32g0xx_it.c ****   /* USER CODE END TIM3_IRQn 1 */
 184:Src/stm32g0xx_it.c **** }
 200              		.loc 1 184 1 is_stmt 0 view .LVU22
 201              		@ sp needed
 202 0008 10BD     		pop	{r4, pc}
 203              	.L12:
 204 000a C046     		.align	2
 205              	.L11:
 206 000c 00000000 		.word	htim3
 207              		.cfi_endproc
 208              	.LFE317:
 210              		.section	.text.USART1_IRQHandler,"ax",%progbits
 211              		.align	1
 212              		.global	USART1_IRQHandler
 213              		.syntax unified
 214              		.code	16
 215              		.thumb_func
 217              	USART1_IRQHandler:
 218              	.LFB318:
 185:Src/stm32g0xx_it.c **** 
 186:Src/stm32g0xx_it.c **** /**
 187:Src/stm32g0xx_it.c ****   * @brief This function handles USART1 global interrupt / USART1 wake-up interrupt through EXTI li
 188:Src/stm32g0xx_it.c ****   */
 189:Src/stm32g0xx_it.c **** void USART1_IRQHandler(void)
 190:Src/stm32g0xx_it.c **** {
 219              		.loc 1 190 1 is_stmt 1 view -0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 0
 222              		@ frame_needed = 0, uses_anonymous_args = 0
 223 0000 10B5     		push	{r4, lr}
 224              	.LCFI3:
ARM GAS  C:\Users\thinhnnh\AppData\Local\Temp\cczqndbJ.s 			page 8


 225              		.cfi_def_cfa_offset 8
 226              		.cfi_offset 4, -8
 227              		.cfi_offset 14, -4
 191:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 192:Src/stm32g0xx_it.c **** 
 193:Src/stm32g0xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 194:Src/stm32g0xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 228              		.loc 1 194 3 view .LVU24
 229 0002 0248     		ldr	r0, .L14
 230 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 231              	.LVL3:
 195:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 196:Src/stm32g0xx_it.c **** 
 197:Src/stm32g0xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 198:Src/stm32g0xx_it.c **** }
 232              		.loc 1 198 1 is_stmt 0 view .LVU25
 233              		@ sp needed
 234 0008 10BD     		pop	{r4, pc}
 235              	.L15:
 236 000a C046     		.align	2
 237              	.L14:
 238 000c 00000000 		.word	huart1
 239              		.cfi_endproc
 240              	.LFE318:
 242              		.section	.text.USART2_IRQHandler,"ax",%progbits
 243              		.align	1
 244              		.global	USART2_IRQHandler
 245              		.syntax unified
 246              		.code	16
 247              		.thumb_func
 249              	USART2_IRQHandler:
 250              	.LFB319:
 199:Src/stm32g0xx_it.c **** 
 200:Src/stm32g0xx_it.c **** /**
 201:Src/stm32g0xx_it.c ****   * @brief This function handles USART2 global interrupt / USART2 wake-up interrupt through EXTI li
 202:Src/stm32g0xx_it.c ****   */
 203:Src/stm32g0xx_it.c **** void USART2_IRQHandler(void)
 204:Src/stm32g0xx_it.c **** {
 251              		.loc 1 204 1 is_stmt 1 view -0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 0
 254              		@ frame_needed = 0, uses_anonymous_args = 0
 255 0000 10B5     		push	{r4, lr}
 256              	.LCFI4:
 257              		.cfi_def_cfa_offset 8
 258              		.cfi_offset 4, -8
 259              		.cfi_offset 14, -4
 205:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 0 */
 206:Src/stm32g0xx_it.c **** 
 207:Src/stm32g0xx_it.c ****   /* USER CODE END USART2_IRQn 0 */
 208:Src/stm32g0xx_it.c ****   HAL_UART_IRQHandler(&huart2);
 260              		.loc 1 208 3 view .LVU27
 261 0002 0248     		ldr	r0, .L17
 262 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 263              	.LVL4:
 209:Src/stm32g0xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 1 */
 210:Src/stm32g0xx_it.c **** 
ARM GAS  C:\Users\thinhnnh\AppData\Local\Temp\cczqndbJ.s 			page 9


 211:Src/stm32g0xx_it.c ****   /* USER CODE END USART2_IRQn 1 */
 212:Src/stm32g0xx_it.c **** }
 264              		.loc 1 212 1 is_stmt 0 view .LVU28
 265              		@ sp needed
 266 0008 10BD     		pop	{r4, pc}
 267              	.L18:
 268 000a C046     		.align	2
 269              	.L17:
 270 000c 00000000 		.word	huart2
 271              		.cfi_endproc
 272              	.LFE319:
 274              		.text
 275              	.Letext0:
 276              		.file 2 "c:\\gcc_arm\\arm-none-eabi\\include\\machine\\_default_types.h"
 277              		.file 3 "c:\\gcc_arm\\arm-none-eabi\\include\\sys\\_stdint.h"
 278              		.file 4 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g070xx.h"
 279              		.file 5 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_def.h"
 280              		.file 6 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_dma.h"
 281              		.file 7 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_tim.h"
 282              		.file 8 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart.h"
 283              		.file 9 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_flash.h"
 284              		.file 10 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal.h"
 285              		.file 11 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h"
ARM GAS  C:\Users\thinhnnh\AppData\Local\Temp\cczqndbJ.s 			page 10


DEFINED SYMBOLS
                            *ABS*:00000000 stm32g0xx_it.c
C:\Users\thinhnnh\AppData\Local\Temp\cczqndbJ.s:18     .text.NMI_Handler:00000000 $t
C:\Users\thinhnnh\AppData\Local\Temp\cczqndbJ.s:24     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\thinhnnh\AppData\Local\Temp\cczqndbJ.s:42     .text.HardFault_Handler:00000000 $t
C:\Users\thinhnnh\AppData\Local\Temp\cczqndbJ.s:48     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\thinhnnh\AppData\Local\Temp\cczqndbJ.s:65     .text.SVC_Handler:00000000 $t
C:\Users\thinhnnh\AppData\Local\Temp\cczqndbJ.s:71     .text.SVC_Handler:00000000 SVC_Handler
C:\Users\thinhnnh\AppData\Local\Temp\cczqndbJ.s:85     .text.PendSV_Handler:00000000 $t
C:\Users\thinhnnh\AppData\Local\Temp\cczqndbJ.s:91     .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\thinhnnh\AppData\Local\Temp\cczqndbJ.s:105    .text.SysTick_Handler:00000000 $t
C:\Users\thinhnnh\AppData\Local\Temp\cczqndbJ.s:111    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\thinhnnh\AppData\Local\Temp\cczqndbJ.s:132    .text.FLASH_IRQHandler:00000000 $t
C:\Users\thinhnnh\AppData\Local\Temp\cczqndbJ.s:138    .text.FLASH_IRQHandler:00000000 FLASH_IRQHandler
C:\Users\thinhnnh\AppData\Local\Temp\cczqndbJ.s:159    .text.RCC_IRQHandler:00000000 $t
C:\Users\thinhnnh\AppData\Local\Temp\cczqndbJ.s:165    .text.RCC_IRQHandler:00000000 RCC_IRQHandler
C:\Users\thinhnnh\AppData\Local\Temp\cczqndbJ.s:179    .text.TIM3_IRQHandler:00000000 $t
C:\Users\thinhnnh\AppData\Local\Temp\cczqndbJ.s:185    .text.TIM3_IRQHandler:00000000 TIM3_IRQHandler
C:\Users\thinhnnh\AppData\Local\Temp\cczqndbJ.s:206    .text.TIM3_IRQHandler:0000000c $d
C:\Users\thinhnnh\AppData\Local\Temp\cczqndbJ.s:211    .text.USART1_IRQHandler:00000000 $t
C:\Users\thinhnnh\AppData\Local\Temp\cczqndbJ.s:217    .text.USART1_IRQHandler:00000000 USART1_IRQHandler
C:\Users\thinhnnh\AppData\Local\Temp\cczqndbJ.s:238    .text.USART1_IRQHandler:0000000c $d
C:\Users\thinhnnh\AppData\Local\Temp\cczqndbJ.s:243    .text.USART2_IRQHandler:00000000 $t
C:\Users\thinhnnh\AppData\Local\Temp\cczqndbJ.s:249    .text.USART2_IRQHandler:00000000 USART2_IRQHandler
C:\Users\thinhnnh\AppData\Local\Temp\cczqndbJ.s:270    .text.USART2_IRQHandler:0000000c $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_FLASH_IRQHandler
HAL_TIM_IRQHandler
htim3
HAL_UART_IRQHandler
huart1
huart2
